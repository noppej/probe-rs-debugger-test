[package]
name = "probe-rs-debugger-test"
description = "Test the probe-rs-debugger (and optionally VSCode extension) against various chips/boards"
version = "0.3.0"
authors = ["Jack Noppe <noppej@hotmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
autoexamples = false
autotests = false
autobenches = false
resolver = "2"

[[bin]]
name = "esp32c3"
required-features = ["esp32c3"]

[[bin]]
name = "nRF52833_xxAA"
required-features = ["nRF52833_xxAA"]

[[bin]]
name = "RP2040"
required-features = ["RP2040"]

[features]
RP2040 = [
    "cortex-m",
    "cortex-m-rt",
    "rp-pico",
    "cortex-m/inline-asm",
    # CONFIGUIRE: Enable one of these to test the debugger's ability to unwind specific use cases.
    "full_unwind",
    # "systick",
    # "svcall",
    # "hardfault_from_usagefault", #TODO: This unwind is incorrect when it transitions from udf() to main()
    # "hardfault_from_busfault",
    # "hardfault-in-systick" ,
]

nRF52833_xxAA = [
    "cortex-m",
    "cortex-m-rt",
    "nrf52833-hal",
    "cortex-m/critical-section-single-core",
    "cortex-m/inline-asm",
    # CONFIGUIRE: Enable one of these to test the debugger's ability to unwind specific use cases.
    "full_unwind",
    # "systick",
    # "svcall",
    # "hardfault_from_usagefault", #TODO: This unwind is incorrect when it transitions from udf() to main()
    # "hardfault_from_busfault",
    # "hardfault-in-systick",
]

esp32c3 = [
    "esp-hal",
    "esp-riscv-rt",
    # CONFIGUIRE: Enable one of these to test the debugger's ability to unwind specific use cases.
    "full_unwind",
    ]

# The following features control which unwind behaviours will be triggered in the code.
# They are used to test the debugger's ability to handle exceptions, and are optional.
# If not specified, the code will run to a software breakpoint, which is common in all features.
# NOTE: There are currently no guards on these, so care should be taken to not enable multiple at once.
full_unwind = []
systick = []
svcall = []
hardfault_from_usagefault = []
hardfault_from_busfault = []
hardfault-in-systick = ["systick", "hardfault_from_busfault"]

[dependencies]
# Dependencies shared between different hardware
rtt-target = { version = "0.5" }
heapless = { version = "0.8", default-features = false }

# Feature specific dependencies
nrf52833-hal = { version = "0.16", features = ["rt"], optional = true }

rp-pico = { version = "0.8.0", optional = true }

cortex-m = { version = "0.7.7", optional = true }
cortex-m-rt = { version = "0.7.3", optional = true }

esp-hal = { version = "0.17.0",features = ["esp32c3"], optional = true }
esp-riscv-rt = { version = "0.8.0", optional = true }

[patch.crates-io]
cortex-m-rt = {git="https://github.com/rust-embedded/cortex-m"}

[profile.debug-no-opt]
inherits = "dev"
opt-level = 0    # default is 0, and 1 = basic optimizations.
lto = "off"      # Link Time Optimizations

[profile.debug-lto-thin-opt-1]
inherits = "dev"
opt-level = 1    # default is 0, and 1 = basic optimizations.
lto = "thin"     # Link Time Optimizations

[profile.debug-lto-fat-opt-2]
inherits = "dev"
opt-level = 2    # default is 0, and 1 = basic optimizations.
lto = "fat"      # Link Time Optimizations
